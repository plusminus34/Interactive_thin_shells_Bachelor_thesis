

#include <gtest/gtest.h>
#include <OptimizationLib/QuadraticProblemFormulation.hpp>
#include <OptimizationLib/ooqpei_gtest_eigen.hpp>
#include <Eigen/Core>

using namespace std;

TEST(OOQPEITest, QuadraticProblemFormulation)
{
  Eigen::Vector2d solution(1.030779872038734, -3.143697043057237);

  Eigen::SparseMatrix<double, Eigen::RowMajor> A, C, D;
  Eigen::DiagonalMatrix<double, Eigen::Dynamic> S, W;
  Eigen::VectorXd b, c, d, f, x;

  A.resize(3, 2);
  A.insert(0, 0) = 1.0;
  A.insert(0, 1) = -1.0;
  A.insert(1, 0) = -4.0;
  A.insert(1, 1) = -3.0;
  A.insert(2, 0) = 2.0;
  A.insert(2, 1) = 0.0;
  S = Eigen::Vector3d(3.0, 2.0, 0.69).asDiagonal();
  W = Eigen::Vector2d(0.5, 0.2).asDiagonal();
  b.resize(3);
  b << 3.0, 6.0, 9.0;
 
  leastSquaresSolve(A, S, b, W, C, c, D, d, f, x);

  ooqpei::eigen::expectNear(x, solution, 1e-10, OOQPEI_SOURCE_FILE_POS);
}
